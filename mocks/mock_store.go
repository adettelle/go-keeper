// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adettelle/go-keeper/internal/server/api (interfaces: ICustomerRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repo "github.com/adettelle/go-keeper/internal/repo"
	gomock "github.com/golang/mock/gomock"
)

// MockICustomerRepo is a mock of ICustomerRepo interface.
type MockICustomerRepo struct {
	ctrl     *gomock.Controller
	recorder *MockICustomerRepoMockRecorder
}

// MockICustomerRepoMockRecorder is the mock recorder for MockICustomerRepo.
type MockICustomerRepoMockRecorder struct {
	mock *MockICustomerRepo
}

// NewMockICustomerRepo creates a new mock instance.
func NewMockICustomerRepo(ctrl *gomock.Controller) *MockICustomerRepo {
	mock := &MockICustomerRepo{ctrl: ctrl}
	mock.recorder = &MockICustomerRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICustomerRepo) EXPECT() *MockICustomerRepoMockRecorder {
	return m.recorder
}

// AddCustomer mocks base method.
func (m *MockICustomerRepo) AddCustomer(arg0 context.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCustomer", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCustomer indicates an expected call of AddCustomer.
func (mr *MockICustomerRepoMockRecorder) AddCustomer(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCustomer", reflect.TypeOf((*MockICustomerRepo)(nil).AddCustomer), arg0, arg1, arg2, arg3)
}

// GetCustomerByLogin mocks base method.
func (m *MockICustomerRepo) GetCustomerByLogin(arg0 context.Context, arg1 string) (*repo.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerByLogin", arg0, arg1)
	ret0, _ := ret[0].(*repo.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerByLogin indicates an expected call of GetCustomerByLogin.
func (mr *MockICustomerRepoMockRecorder) GetCustomerByLogin(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerByLogin", reflect.TypeOf((*MockICustomerRepo)(nil).GetCustomerByLogin), arg0, arg1)
}
