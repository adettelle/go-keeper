// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adettelle/go-keeper/internal/server/api (interfaces: IJwtRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIJwtRepo is a mock of IJwtRepo interface.
type MockIJwtRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIJwtRepoMockRecorder
}

// MockIJwtRepoMockRecorder is the mock recorder for MockIJwtRepo.
type MockIJwtRepoMockRecorder struct {
	mock *MockIJwtRepo
}

// NewMockIJwtRepo creates a new mock instance.
func NewMockIJwtRepo(ctrl *gomock.Controller) *MockIJwtRepo {
	mock := &MockIJwtRepo{ctrl: ctrl}
	mock.recorder = &MockIJwtRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJwtRepo) EXPECT() *MockIJwtRepoMockRecorder {
	return m.recorder
}

// AddJwtToken mocks base method.
func (m *MockIJwtRepo) AddJwtToken(arg0 context.Context, arg1 int, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddJwtToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddJwtToken indicates an expected call of AddJwtToken.
func (mr *MockIJwtRepoMockRecorder) AddJwtToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddJwtToken", reflect.TypeOf((*MockIJwtRepo)(nil).AddJwtToken), arg0, arg1, arg2)
}
