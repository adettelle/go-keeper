// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adettelle/go-keeper/internal/server/api (interfaces: IMinioService)

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIMinioService is a mock of IMinioService interface.
type MockIMinioService struct {
	ctrl     *gomock.Controller
	recorder *MockIMinioServiceMockRecorder
}

// MockIMinioServiceMockRecorder is the mock recorder for MockIMinioService.
type MockIMinioServiceMockRecorder struct {
	mock *MockIMinioService
}

// NewMockIMinioService creates a new mock instance.
func NewMockIMinioService(ctrl *gomock.Controller) *MockIMinioService {
	mock := &MockIMinioService{ctrl: ctrl}
	mock.recorder = &MockIMinioServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMinioService) EXPECT() *MockIMinioServiceMockRecorder {
	return m.recorder
}

// GetObject mocks base method.
func (m *MockIMinioService) GetObject(arg0 string) (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObject indicates an expected call of GetObject.
func (mr *MockIMinioServiceMockRecorder) GetObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockIMinioService)(nil).GetObject), arg0)
}

// Upload mocks base method.
func (m *MockIMinioService) Upload(arg0 string, arg1 io.Reader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upload indicates an expected call of Upload.
func (mr *MockIMinioServiceMockRecorder) Upload(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockIMinioService)(nil).Upload), arg0, arg1)
}
